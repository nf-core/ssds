/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
    }
    
    withName: 'NFCORE_SSDS:SSDS:BWA_INDEX' {
        publishDir = [
            path: { "${params.outdir}/genome/index" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
            enabled: true
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:INPUT_CHECK:SAMPLESHEET_CHECK' {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:TRIMGALORE' {
        ext.args = "-q 10 --stringency 6 --length 25"
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: 'copy',
            pattern: "*trimming_report.txt",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:BWA_MEM' {
        ext.prefix = { "${meta.id}.bwa_initial_alignment" }
        publishDir = [
            enabled: false
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:FILTER_SUPP_ALIGNMENTS' {
        ext.args   = "-F 2048 -hb"
        ext.prefix = { "${meta.id}.without_supplementary_alignments" }
        publishDir = [
            enabled: false
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:.*:PICARD_SORTSAM' {
        ext.prefix = { "${meta.id}.raw_aligned" }
        publishDir = [
            enabled: false
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:.*:PICARD_MARKDUPLICATES' {
        publishDir = [
            [
                path: { "${params.outdir}/bam" },
                mode: 'copy',
                pattern: "*.bam",
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ],
            [
                path: { "${params.outdir}/reports" },
                mode: 'copy',
                pattern: "*.txt",
                enabled: true,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:.*:SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/bam" },
            mode: 'copy',
            pattern: "*.bai",
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }    
        
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:PICARD_COLLECTMULTIPLEMETRICS' {
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: 'copy',
            pattern: "*CollectMultipleMetrics*",
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:PICARD_SORTSAM_QRY' {
        publishDir = [
            enabled: false  
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:PARSESSDS' {
        ext.args   = { "--mode ${params.parse_extra_types ? "all" : "ss"}" }
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: 'copy',
            pattern: "SSDS_parse_report.txt",
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:BEDTOOLS_SORT' {
        publishDir = [
            path: { "${params.outdir}/bed" },
            mode: 'copy',
            pattern: "*.bed",
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:ALIGN_SS:SAMTOOLS_IDXSTATS' {
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: 'copy',
            pattern: "*",
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    
    withName: 'NFCORE_SSDS:SSDS:BEDTOOLS_MAKEWINDOWS' {
        ext.args = "-w 100"
        publishDir = [
            enabled: false  
        ]
    }

    withName: 'NFCORE_SSDS:SSDS:MAKE_SSDS_BIGWIGS:GENERATE_SSDS_COVERAGE' {
        publishDir = [
            enabled: false, 
        ]
    }   
    
    withName: 'NFCORE_SSDS:SSDS:MAKE_SSDS_BIGWIGS:UCSC_BEDGRAPHTOBIGWIG' {
        publishDir = [
            path: { "${params.outdir}/bigwig" },
            mode: 'copy',
            enabled: true, 
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }    
    
    withName: 'NFCORE_SSDS:SSDS:CALCULATESPOT' {
        ext.args = "-w 100 -g ${params.genome}"
        publishDir = [
            path: { "${params.outdir}/spot" },
            mode: 'copy',
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename } 
        ]
    }  
    
    withName: 'NFCORE_SSDS:SSDS:DEEPTOOLS_PLOTFINGERPRINT' {
        ext.args   = [
            '--minMappingQuality 30',
            '--skipZeros',
            '--smartLabels',
            '-n 2000000'
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/reports" },
            mode: 'copy',
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }  

    withName: 'NFCORE_SSDS:SSDS:MULTIQC_SSDS' {
        ext.args   = [
            params.multiqc_title ? "--title \"${params.multiqc_title}\"" : "SSDS",
            params.multiqc_config ? "-c multiqc_ssds_config.yaml" : ""
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: 'copy',
            enabled: true,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }  
}
